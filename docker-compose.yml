services:
  db:
    restart: always
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
    ports:
      - "1433:1433"
    container_name: mssql
    networks:
      - mynetwork

  api:
    depends_on:
      kafka:
        condition: service_healthy
    container_name: api
    restart: always
    env_file:
      - ./Api/Api/.env
    build:
      dockerfile: Api/Api/Dockerfile
    ports:
      - "8081:440"
    expose:
      - "440"
    networks:
      - mynetwork


  ui:
    container_name: ui
    restart: always
    env_file:
      - ./UI/UI/.env
    build:
      dockerfile: UI/UI/Dockerfile
    ports:
      - "8080:8080"
    expose:
      - "8080"
    networks:
      - mynetwork


  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    restart: always
    ports:
      - 2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zoo-data:/var/lib/zookeeper/data
      - zoo-log:/var/lib/zookeeper/log
    networks:
      - mynetwork

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_MESSAGE_TIMESTAMP_TYPE: CreateTime
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10


  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: always
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  zoo-data:
  zoo-log:
  kafka-data: