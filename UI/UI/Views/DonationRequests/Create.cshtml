@model CreateDonationRequestVM
@{
    ViewData["Title"] = "Створити запит на донорство";
}


<div class="profile-form-wrapper d-flex justify-content-between" style="gap: 2rem;">
    <div class="form-section" style="flex: 1;">
        <form asp-action="Create" asp-controller="DonationRequests" method="post">
            <div>
                <div class="mb-3">
                    <label asp-for="BloodTypeId" class="form-label">Група крові</label>
                    <select asp-for="BloodTypeId" asp-items="ViewBag.BloodTypes" class="form-control auth-input">
                        <option value="">Оберіть групу</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label asp-for="City" class="form-label">Місто</label>
                    <input asp-for="City" id="city-input" class="form-control auth-input" placeholder="Місто" readonly />
                </div>

                <input asp-for="Latitude" type="hidden" id="lat-input" />
                <input asp-for="Longitude" type="hidden" id="lng-input" />

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-danger">Зробити запит</button>
                </div>
            </div>
        </form>
    </div>

    <div style="flex: 1;">
        <div id="map" style="height: 80vh; width: 100%; border: 1px solid #ccc;"></div>
    </div>
</div>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
<script>

    var map = L.map('map', {
        zoomControl: false,
        attributionControl: false
    }).setView([48.3794, 31.1656], 6);

    L.tileLayer(
        'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png',
        { maxZoom: 19 }
    ).addTo(map);

    var marker;

    document.addEventListener('DOMContentLoaded', function () {
        var latVal = '@(Model?.Latitude ?? 0)';
        var lngVal = '@(Model?.Longitude ?? 0)';
        var cityVal = '@Model?.City';

        if (latVal && lngVal && latVal !== '0' && lngVal !== '0') {
            var ll = L.latLng(+latVal, +lngVal);
            marker = L.marker(ll).addTo(map);
            map.setView(ll, 12);
            document.getElementById('lat-input').value = ll.lat.toFixed(6);
            document.getElementById('lng-input').value = ll.lng.toFixed(6);
        }
        else if (cityVal) {
            fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(cityVal)}`)
                .then(res => res.json())
                .then(results => {
                    if (results.length) {
                        var r = results[0];
                        var ll = L.latLng(r.lat, r.lon);
                        marker = L.marker(ll).addTo(map);
                        map.setView(ll, 12);
                        document.getElementById('lat-input').value = (+r.lat).toFixed(6);
                        document.getElementById('lng-input').value = (+r.lon).toFixed(6);
                    }
                });
        }
    });

    map.on('click', function (e) {
        var lat = e.latlng.lat.toFixed(6);
        var lng = e.latlng.lng.toFixed(6);
        if (marker) marker.setLatLng(e.latlng);
        else marker = L.marker(e.latlng).addTo(map);
        document.getElementById('lat-input').value = lat;
        document.getElementById('lng-input').value = lng;

        fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
            .then(res => res.json())
            .then(data => {
                var city = data.address.city || data.address.town || data.address.village;
                if (city) document.getElementById('city-input').value = city;
            });
    });
</script>